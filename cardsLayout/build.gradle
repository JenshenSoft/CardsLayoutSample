apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries
def test = rootProject.ext.testingLibraries

def siteUrl = 'https://github.com/JenshenSoft/CardsLayoutSample'
def gitUrl = 'https://github.com/JenshenSoft/CardsLayoutSample.git'
def libDesc = 'CardsLayout android library'

group = "ua.jenshensoft"
version = "0.9282"

allprojects {
    repositories {
        mavenCentral()
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
}

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    resourcePrefix "cardsLayout_"

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = group
        name = project.name
        desc = libDesc
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android', 'example']
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name "Cards layout library"
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'jenshen1992'
                        name 'Yevhen'
                        email 'samoilov.yevhen@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    //options.encoding = 'UTF-8'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'ua.jenshensoft:awesomeanimation:1.0.2'
    compileOnly "com.android.support:appcompat-v7:${libs.supportVersion}"
    compileOnly "com.android.support:support-annotations:${libs.supportVersion}"
    //Stream API
    implementation "com.annimon:stream:${libs.streamApiVersion}"

    //testing
    testImplementation "junit:junit:${test.junit}"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
